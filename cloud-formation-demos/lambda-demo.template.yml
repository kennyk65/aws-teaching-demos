AWSTemplateFormatVersion: 2010-09-09

# Simple Lambda demo.

Parameters:

  Runtime:
    Description:  Language runtime to use for the Lambda 
    Type:  String
    AllowedValues: 
    - nodejs18.x
    - nodejs20.x
    - nodejs22.x
    Default: nodejs22.x

Resources:

  # This is a simple inline NodeJS "hello world" style Lambda function.
  MyLambda:
    Type: AWS::Lambda::Function
    Properties: 
      FunctionName: MyLambda
      Description: Example Lambda from CloudFormation
      MemorySize: 256
      Timeout: 4
      Role: !GetAtt LambdaFunctionRole.Arn
      Runtime: !Ref Runtime
      Handler: index.justatest
      Code:
        ZipFile:  |
          'use strict';
          console.log('Loading function');
          console.log('just a test');
          exports.justatest = (event, context, callback) => {
              //console.log('Received event:', JSON.stringify(event, null, 2));
              console.log('value1 =', event.key1);
              console.log('value2 =', event.key2);
              console.log('value3 =', event.key3);
              callback(null, event.key1);  // Echo back the first key value
              //callback('Something went wrong');
          };        


  # This Role allows the Lambda function to make API calls if needed.
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub BasicLambdaRole-${AWS::StackName}  
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole

  # This Policy is attached to the LambdaFunctionRole.
  # Basic permissions for CloudWatch Logs, expand as needed.
  LambdaFunctionPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: !Sub LambdaFunctionPolicy-${AWS::StackName}
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          Effect: Allow
          Action: 
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: "*"
      Roles: 
        -  !Ref LambdaFunctionRole   

Outputs:
  LambdaConsole:
    Description:  Link to the Lambda console
    Value: !Sub https://${AWS::AccountId}.${AWS::Region}.console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${MyLambda}?tab=code
