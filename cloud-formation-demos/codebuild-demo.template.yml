AWSTemplateFormatVersion: 2010-09-09

# Simple CodeBuild demo.
# Source needs to come from a public github repo of your choice.  buildspec.yml should exist.
# The build is assumed to be some kind of Java, so it uses the (hard-coded) jdk 8 image.
# Output goes to a prefix in an S3 bucket
# Much of the work involves setup of the role / policy, so you have to allow this when you run.

Parameters:

  InputGitHubRepo:
    Description: Existing public GitHub repository with buildspec.yml
    Type: String
    Default: https://github.com/kennyk65/aws-cloudbuild-demo.git

  OutputS3Bucket:
    Description: Existing S3 Bucket where you want to place output artifacts
    Type: String
    Default: kk-uploads-oregon

  OutputS3Prefix:
    Description: Folder within your S3 Bucket where you want to place output artifacts
    Type: String
    Default: build-output


Resources:

  # This Role allows CodeBuild to do certain things on our behalf.
  # See the policy for the interesting stuff:
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName:  !Sub ${AWS::StackName}-CodeBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement: 
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole


  # This Policy is attached to the CodeBuildRole.
  # CodeBuild is allowed upload on S3, CodeBuild, and CloudWatch Logs; could probably be tightened quite a bit.
  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties: 
      PolicyName: !Sub ${AWS::StackName}-CodeBuildPolicy
      PolicyDocument: 
        Version: 2012-10-17
        Statement: 
          Effect: Allow
          Action: 
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - s3:putObject
            - s3:getObject
            - codebuild:*
          Resource: "*"
      Roles: 
        -  !Ref CodeBuildRole   # Attach to CodeBuildRole.


  # The CodeBuild project will obtain source from the given GitHub repository.
  # This is a Java Maven build, so the openjdk 8 is fine.
  # Most of the details on how to to the build itself is in the 
  # project's buildspec: https://github.com/kennyk65/aws-cloudbuild-demo/blob/master/buildspec.yml
  MyBuild:
    Type: AWS::CodeBuild::Project
    Properties: 
      Name:  !Sub ${AWS::StackName}-CodeBuildDemo
      Description: Demo of CodeBuild with CodeDeploy pipeline.
      ServiceRole: !Ref CodeBuildRole
      TimeoutInMinutes: 5
      Source:
        Type: GITHUB
        Location: !Ref InputGitHubRepo
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0  
      Artifacts:
        Type: S3
        Name: !Ref OutputS3Prefix
        Location: !Ref OutputS3Bucket
        EncryptionDisabled: true
      Cache:
        Type: S3
        Location: !Sub ${OutputS3Bucket}/cache
      Triggers:  # Fire build on any push to master.
        Webhook: true
        FilterGroups:
        - - Type: EVENT
            Pattern: PUSH
          

  # CloudWatch Logs Groups are created automatically when CodeBuild writes output,
  # but they are easier to cleanup when they are part of the stack.  
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain  # Keep the logs around if the stack fails 
    Properties:
      LogGroupName: !Sub /aws/codebuild/${AWS::StackName}-CodeBuildDemo
      RetentionInDays: 1

Outputs:
  CloudWatchLogsConsole:
    Description:  Link to the CloudWatch Logs console for your log group
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logsV2:log-groups/log-group/${CloudwatchLogsGroup}


